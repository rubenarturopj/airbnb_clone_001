/* 

There are several ways to specify types in TS:

1. inline types in the function parameters:  // (person is the param1 with 2 properties: name and age)
    
    function greet(person:{name:string; age:number}){
        return "Hello" + person.name;
    }

2. create an interface or blueprint -- or a type alias---- and then use it in the function
    
    interface Person {
        name: string;
        age: number;
    };

    // or
    
    type Person = {
        name: string;
        age: number;
    }

    function greet(person: Person) {
        return "Hello" + person.name;
    }




ENUMS

An enum is a special "class" that represents a group of constants (unchangeable variables).
Enums come in two flavors string and numeric

Exmaples:

Numeric Enums - Initialized
enum CardinalDirections {
  North = 1,
  East,
  South,
  West
}
// logs 1
console.log(CardinalDirections.North);
// logs 4
console.log(CardinalDirections.West);


Numeric Enums - Fully Initialized
enum StatusCodes {
  NotFound = 404,
  Success = 200,
  Accepted = 202,
  BadRequest = 400
}
// logs 404
console.log(StatusCodes.NotFound);
// logs 200
console.log(StatusCodes.Success);



String Enums
enum CardinalDirections {
  North = 'North',
  East = "East",
  South = "South",
  West = "West"
};
// logs "North"
console.log(CardinalDirections.North);
// logs "West"
console.log(CardinalDirections.West);



*/